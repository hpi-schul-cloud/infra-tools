global
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn 	{{ maxconn }}   
    maxsessrate {{ maxsessrate }}
{% if maxsslconn is defined %}
    maxsslconn 	{{ maxsslconn }}
{% endif %}
{% if tune_ssl_cachesize is defined %}
    tune.ssl.cachesize {{ tune_ssl_cachesize }}
{% endif %}
{% if tune_ssl_default_dh_param is defined %}
    tune.ssl.default-dh-param {{ tune_ssl_default_dh_param }}
{% endif %}

    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats
    stats timeout 30s

{% if ssl_default_bind_ciphers is defined %}
    ssl-default-bind-ciphers {{ ssl_default_bind_ciphers }}
{% endif %}
{% if ssl_default_bind_options is defined %}
    ssl-default-bind-options {{ ssl_default_bind_options }}
{% endif %}
{% if ssl_default_server_ciphers is defined %}
    ssl-default-server-ciphers {{ ssl_default_server_ciphers }}
{% endif %}
{% if ssl_default_server_options is defined %}
    ssl-default-server-options {{ ssl_default_server_options }}
{% endif %}
    
{% if strict_limits %}
    # Crash when setrlimits fails
    strict-limits
{% endif %}

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    {{ haproxy_mode }}
    log                     {{ haproxy_log}}
{% for option in options %}
    option                  {{ option }}
{% endfor %}
    retries                 {{ retries }}
    timeout http-request    {{ timeouts.http_request }}
    timeout queue           {{ timeouts.queue }}
    timeout connect         {{ timeouts.connect }}
    timeout client          {{ timeouts.client }}
    timeout server          {{ timeouts.server }}
    timeout http-keep-alive {{ timeouts.http_keep_alive }}
    timeout check           {{ timeouts.check }}
    timeout client-fin      {{ timeouts.client_fin }}
    timeout server-fin      {{ timeouts.server_fin }}

frontend haproxy
{% for ip in frontend_ips %}
{% for port in frontend_open_ports %}
    bind {{ ip }}:{{ port }} v4v6 transparent
{% endfor %}
{% endfor %}
    default_backend cluster

backend cluster
    mode http
    balance static-rr
{% for ip in k8s_node_ips %}
    server worker-{{ loop.index }} {{ ip }}:80 check inter 10s fall 2 maxconn 12000
{% endfor %}

---
- name: Test
  hosts: localhost
  gather_facts: false
  vars:
    document_original_content: |-
      Test file.
    document_updated_content: |-
      Updated file.
    op_credentials: 
      OP_EMAIL: "{{ lookup('env','OP_EMAIL') }}"
      OP_PASSWORD: "{{ lookup('env','OP_PASSWORD') }}"
      OP_SECRET_KEY: "{{ lookup('env','OP_SECRET_KEY') }}"
      OP_SUBDOMAIN: "{{ lookup('env','OP_SUBDOMAIN') }}"
      OP_2FA_TOKEN: "{{ lookup('env','OP_2FA_TOKEN') }}"
    op_credentials_file: "{{ playbook_dir }}/credentials.json"

  tasks:
    - name: Generate credentials file
      template:
        src: credentials.json.j2
        dest: "{{ op_credentials_file }}"
      vars:
        OP_EMAIL: "{{ lookup('env','OP_EMAIL') }}"
        OP_PASSWORD: "{{ lookup('env','OP_PASSWORD') }}"
        OP_SECRET_KEY: "{{ lookup('env','OP_SECRET_KEY') }}"
        OP_SUBDOMAIN: "{{ lookup('env','OP_SUBDOMAIN') }}"
        OP_2FA_TOKEN: "{{ lookup('env','OP_2FA_TOKEN') }}"

    - name: Run the tests with env credentials
      block:
        - name: Create item
          dbildungscloud.onepwd.item:
            vault: Private
            name: create-test
            category: password
          register: op
        - name: Create empty item
          assert:
            that:
              - op.changed
              - op.item is defined
              - op.item.title == 'create-test'
              - op.item.category | lower == 'password'

        - name: Item already exists
          dbildungscloud.onepwd.item:
            state: present
            vault: Private
            name: create-test
          register: op
        - name: Item already exists
          assert:
            that:
              - not op.changed
              - op.item is defined
              - op.item.title == 'create-test'
              - op.item.category | lower == 'password'

        - name: Item already exists, add fields
          dbildungscloud.onepwd.item:
            vault: Private
            name: create-test
            fields:
              - name: username_add
                type: text
                value: admin@example.com
              - name: password_add
                type: password
                value: "12345!&"
          register: op
        - name: Item already exists, add fields
          assert:
            that:
              - op.changed
              - op.item is defined
              - op.item.title == 'create-test'
              - op.item.category | lower == 'password'
              - op.item.fields | length >= 2
        - name: Item already exists, field already exists (overwrite set to False)
          dbildungscloud.onepwd.item:
            vault: Private
            name: create-test
            fields:
              - name: password_add
                type: password
                value: "12345!&hello"
                overwrite: False
          register: op
        - name: Item already exists, Field already exists, field overwrite False, do not add field
          assert:
            that:
              - not op.changed
        - name: Field have the correct values
          vars:
            fields:
              - name: username_add
                type: text
                value: admin@example.com
              - name: password_add
                type: password
                value: "12345!&"
            field: "{{ op.item.fields | selectattr('label', 'equalto', item.name) | first }}"
          assert:
            that:
              - field.label == item.name
              - field.value == item.value
          loop: "{{ fields }}"

        - name: Item already exists, no changes
          dbildungscloud.onepwd.item:
            vault: Private
            name: create-test
            fields:
              - name: username_add
                type: text
                value: admin@example.com
          register: op
        - name: Item already exists, no changes
          vars:
            field: "{{ op.item.fields | selectattr('label', 'equalto', 'username_add') | first }}"
          assert:
            that:
              - not op.changed
              - op.item is defined
              - op.item.title == 'create-test'
              - op.item.category | lower == 'password'
              - op.item.fields | length >= 1
              - field.label == 'username_add'
              - field.value == 'admin@example.com'

        - name: Item exists, remove field
          dbildungscloud.onepwd.item:
            vault: Private
            name: create-test
            fields:
              - name: username_add
                type: delete
          register: op
        - name: Item already exists, remove field
          assert:
            that:
              - op.changed
              - op.item is defined
              - op.item.title == 'create-test'
              - op.item.category | lower == 'password'
              - op.item.fields | selectattr('label', 'equalto', 'username_add') | length == 0

        - name: Share item
          dbildungscloud.onepwd.share:
            vault: Private
            name: create-test
            view_once: true
          register: op
        - name: Share item
          assert:
            that:
              - op.changed
              - op.link is defined
              - op.link | length > 0
        - name: Share item
          uri:
            url: "{{ op.link }}"

        - name: Create file to upload
          copy:
            content: "{{ document_original_content }}"
            dest: /tmp/original-file.txt
            mode: 0600
        - name: Create document
          dbildungscloud.onepwd.document:
            vault: Private
            name: document-test
            path: /tmp/original-file.txt
        - name: Debug
          debug:
            msg: "{{ op_credentials_file }}"
        - name: Get document
          set_fact:
            onepassword_document: "{{ lookup('dbildungscloud.onepwd.onepwd', secret_name='document-test', vault='Private') }}"
        - name: Create document
          assert:
            that:
              - onepassword_document == document_original_content

        - name: Create updated file to upload
          copy:
            content: "{{ document_updated_content }}"
            dest: /tmp/updated-file.txt
            mode: 0600
        - name: Update document
          dbildungscloud.onepwd.document:
            vault: Private
            credentials: "{{ op_credentials }}"
            name: document-test
            path: /tmp/updated-file.txt
        - name: Get document
          set_fact:
            onepassword_document: "{{ lookup('dbildungscloud.onepwd.onepwd', secret_name='document-test', vault='Private') }}"
        - name: Create document
          assert:
            that:
              - onepassword_document != document_original_content
              - onepassword_document == document_updated_content
        - name: Delete item
          dbildungscloud.onepwd.item:
            vault: Private
            credentials: "{{ op_credentials }}"
            name: create-test
            category: password
            state: absent
          register: op
        - name: Delete item
          assert:
            that:
              - op.changed
        - name: Delete document
          dbildungscloud.onepwd.item:
            credentials: "{{ op_credentials }}"
            vault: Private
            name: document-test
            state: absent
          register: op

    - name: Run the tests with param credentials
      block:
        - name: Create item
          dbildungscloud.onepwd.item:
            vault: Private
            credentials: "{{ op_credentials }}"
            name: create-test
            category: password
          register: op
        - name: Create empty item
          assert:
            that:
              - op.changed
              - op.item is defined
              - op.item.title == 'create-test'
              - op.item.category | lower == 'password'

        - name: Item already exists
          dbildungscloud.onepwd.item:
            state: present
            vault: Private
            credentials: "{{ op_credentials }}"
            name: create-test
          register: op
        - name: Item already exists
          assert:
            that:
              - not op.changed
              - op.item is defined
              - op.item.title == 'create-test'
              - op.item.category | lower == 'password'

        - name: Item already exists, add fields
          dbildungscloud.onepwd.item:
            vault: Private
            credentials: "{{ op_credentials }}"
            name: create-test
            fields:
              - name: username_add
                type: text
                value: admin@example.com
              - name: password_add
                type: password
                value: "12345!&"
          register: op
        - name: Item already exists, add fields
          assert:
            that:
              - op.changed
              - op.item is defined
              - op.item.title == 'create-test'
              - op.item.category | lower == 'password'
              - op.item.fields | length >= 2
        - name: Item already exists, field already exists (overwrite set to False)
          dbildungscloud.onepwd.item:
            vault: Private
            credentials: "{{ op_credentials }}"
            name: create-test
            fields:
              - name: password_add
                type: password
                value: "12345!&hello"
                overwrite: False
          register: op
        - name: Item already exists, Field already exists, field overwrite False, do not add field
          assert:
            that:
              - not op.changed
        - name: Field have the correct values
          vars:
            fields:
              - name: username_add
                type: text
                value: admin@example.com
              - name: password_add
                type: password
                value: "12345!&"
            field: "{{ op.item.fields | selectattr('label', 'equalto', item.name) | first }}"
          assert:
            that:
              - field.label == item.name
              - field.value == item.value
          loop: "{{ fields }}"

        - name: Item already exists, no changes
          dbildungscloud.onepwd.item:
            vault: Private
            credentials: "{{ op_credentials }}"
            name: create-test
            fields:
              - name: username_add
                type: text
                value: admin@example.com
          register: op
        - name: Item already exists, no changes
          vars:
            field: "{{ op.item.fields | selectattr('label', 'equalto', 'username_add') | first }}"
          assert:
            that:
              - not op.changed
              - op.item is defined
              - op.item.title == 'create-test'
              - op.item.category | lower == 'password'
              - op.item.fields | length >= 1
              - field.label == 'username_add'
              - field.value == 'admin@example.com'

        - name: Item exists, remove field
          dbildungscloud.onepwd.item:
            vault: Private
            credentials: "{{ op_credentials }}"
            name: create-test
            fields:
              - name: username_add
                type: delete
          register: op
        - name: Item already exists, remove field
          assert:
            that:
              - op.changed
              - op.item is defined
              - op.item.title == 'create-test'
              - op.item.category | lower == 'password'
              - op.item.fields | selectattr('label', 'equalto', 'username_add') | length == 0

        - name: Share item
          dbildungscloud.onepwd.share:
            vault: Private
            credentials: "{{ op_credentials }}"
            name: create-test
            view_once: true
          register: op
        - name: Share item
          assert:
            that:
              - op.changed
              - op.link is defined
              - op.link | length > 0
        - name: Share item
          uri:
            url: "{{ op.link }}"

        - name: Create file to upload
          copy:
            content: "{{ document_original_content }}"
            dest: /tmp/original-file.txt
            mode: 0600
        - name: Create document
          dbildungscloud.onepwd.document:
            vault: Private
            credentials: "{{ op_credentials }}"
            name: document-test
            path: /tmp/original-file.txt
        - name: Debug
          debug:
            msg: "{{ op_credentials_file }}"
        - name: Get document
          set_fact:
            onepassword_document: "{{ lookup('dbildungscloud.onepwd.onepwd', secret_name='document-test', vault='Private', credentials=op_credentials) }}"
        - name: Create document
          assert:
            that:
              - onepassword_document == document_original_content

        - name: Create updated file to upload
          copy:
            content: "{{ document_updated_content }}"
            dest: /tmp/updated-file.txt
            mode: 0600
        - name: Update document
          dbildungscloud.onepwd.document:
            vault: Private
            credentials: "{{ op_credentials }}"
            name: document-test
            path: /tmp/updated-file.txt
        - name: Get document
          set_fact:
            onepassword_document: "{{ lookup('dbildungscloud.onepwd.onepwd', secret_name='document-test', vault='Private', credentials=op_credentials) }}"
        - name: Create document
          assert:
            that:
              - onepassword_document != document_original_content
              - onepassword_document == document_updated_content
        - name: Delete item
          dbildungscloud.onepwd.item:
            vault: Private
            credentials: "{{ op_credentials }}"
            name: create-test
            category: password
            state: absent
          register: op
        - name: Delete item
          assert:
            that:
              - op.changed
        - name: Delete document
          dbildungscloud.onepwd.item:
            credentials: "{{ op_credentials }}"
            vault: Private
            name: document-test
            state: absent
          register: op

    - name: Run the tests with file credentials
      block:
        - name: Create item
          dbildungscloud.onepwd.item:
            vault: Private
            name: create-test
            credentials_file: "{{ op_credentials_file }}"
            category: password
          register: op
        - name: Create empty item
          assert:
            that:
              - op.changed
              - op.item is defined
              - op.item.title == 'create-test'
              - op.item.category | lower == 'password'

        - name: Item already exists
          dbildungscloud.onepwd.item:
            state: present
            vault: Private
            credentials_file: "{{ op_credentials_file }}"
            name: create-test
          register: op
        - name: Item already exists
          assert:
            that:
              - not op.changed
              - op.item is defined
              - op.item.title == 'create-test'
              - op.item.category | lower == 'password'

        - name: Item already exists, add fields
          dbildungscloud.onepwd.item:
            vault: Private
            credentials_file: "{{ op_credentials_file }}"
            name: create-test
            fields:
              - name: username_add
                type: text
                value: admin@example.com
              - name: password_add
                type: password
                value: "12345!&"
          register: op
        - name: Item already exists, add fields
          assert:
            that:
              - op.changed
              - op.item is defined
              - op.item.title == 'create-test'
              - op.item.category | lower == 'password'
              - op.item.fields | length >= 2
        - name: Item already exists, field already exists (overwrite set to False)
          dbildungscloud.onepwd.item:
            vault: Private
            credentials_file: "{{ op_credentials_file }}"
            name: create-test
            fields:
              - name: password_add
                type: password
                value: "12345!&hello"
                overwrite: False
          register: op
        - name: Item already exists, Field already exists, field overwrite False, do not add field
          assert:
            that:
              - not op.changed
        - name: Field have the correct values
          vars:
            fields:
              - name: username_add
                type: text
                value: admin@example.com
              - name: password_add
                type: password
                value: "12345!&"
            field: "{{ op.item.fields | selectattr('label', 'equalto', item.name) | first }}"
          assert:
            that:
              - field.label == item.name
              - field.value == item.value
          loop: "{{ fields }}"

        - name: Item already exists, no changes
          dbildungscloud.onepwd.item:
            vault: Private
            credentials_file: "{{ op_credentials_file }}"
            name: create-test
            fields:
              - name: username_add
                type: text
                value: admin@example.com
          register: op
        - name: Item already exists, no changes
          vars:
            field: "{{ op.item.fields | selectattr('label', 'equalto', 'username_add') | first }}"
          assert:
            that:
              - not op.changed
              - op.item is defined
              - op.item.title == 'create-test'
              - op.item.category | lower == 'password'
              - op.item.fields | length >= 1
              - field.label == 'username_add'
              - field.value == 'admin@example.com'

        - name: Item exists, remove field
          dbildungscloud.onepwd.item:
            vault: Private
            credentials_file: "{{ op_credentials_file }}"
            name: create-test
            fields:
              - name: username_add
                type: delete
          register: op
        - name: Item already exists, remove field
          assert:
            that:
              - op.changed
              - op.item is defined
              - op.item.title == 'create-test'
              - op.item.category | lower == 'password'
              - op.item.fields | selectattr('label', 'equalto', 'username_add') | length == 0

        - name: Share item
          dbildungscloud.onepwd.share:
            vault: Private
            credentials_file: "{{ op_credentials_file }}"
            name: create-test
            view_once: true
          register: op
        - name: Share item
          assert:
            that:
              - op.changed
              - op.link is defined
              - op.link | length > 0
        - name: Share item
          uri:
            url: "{{ op.link }}"

        - name: Create file to upload
          copy:
            content: "{{ document_original_content }}"
            dest: /tmp/original-file.txt
            mode: 0600
        - name: Create document
          dbildungscloud.onepwd.document:
            vault: Private
            credentials_file: "{{ op_credentials_file }}"
            name: document-test
            path: /tmp/original-file.txt
        - name: Get document
          set_fact:
            onepassword_document: "{{ lookup('dbildungscloud.onepwd.onepwd', secret_name='document-test', vault='Private', credentials_file=op_credentials_file) }}"
        - name: Create document
          assert:
            that:
              - onepassword_document == document_original_content

        - name: Create updated file to upload
          copy:
            content: "{{ document_updated_content }}"
            dest: /tmp/updated-file.txt
            mode: 0600
        - name: Update document
          dbildungscloud.onepwd.document:
            vault: Private
            credentials_file: "{{ op_credentials_file }}"
            name: document-test
            path: /tmp/updated-file.txt
        - name: Get document
          set_fact:
            onepassword_document: "{{ lookup('dbildungscloud.onepwd.onepwd', secret_name='document-test', vault='Private', credentials_file=op_credentials_file) }}"
        - name: Create document
          assert:
            that:
              - onepassword_document != document_original_content
              - onepassword_document == document_updated_content

      always:
        - name: Delete item
          dbildungscloud.onepwd.item:
            vault: Private
            credentials: "{{ op_credentials }}"
            name: create-test
            category: password
            state: absent
          register: op
        - name: Delete item
          assert:
            that:
              - op.changed
        - name: Delete document
          dbildungscloud.onepwd.item:
            credentials: "{{ op_credentials }}"
            vault: Private
            name: document-test
            state: absent
          register: op
        - name: Delete credentials file
          file:
            path: "{{ op_credentials_file }}"
            state: absent

---
name: BAP Docker Image on Tag

on:
  push:
    tags:
      - 'infra-tools-[0-9]+.[0-9]+.[0-9]+'
      - 'dbcmetrics-[0-9]+.[0-9]+.[0-9]+'
      - 'awx-ee-[0-9]+.[0-9]+.[0-9]+'
    branch:
      - 'OPS-3814-add-Image-Vulnerability-Scanning'
  schedule:
    # Runs "at 2 a.m. past every day" (see https://crontab.guru)
    - cron: '0 2 * * *'

jobs:
  build_and_push_docker:
    runs-on: ubuntu-latest

    steps:
      - name: Filter Tag name
        uses: olegtarasov/get-tag@v2.1
        id: tagName
        with:
          tagRegex: "(.+?(?=-[0-9]))"   # unabhängig von dbmetrics und infra-tools gives name
          tagRegexGroup: 1

      - name: Filter Version name
        uses: olegtarasov/get-tag@v2.1
        id: versionName
        with:
          tagRegex: "${{ steps.tagName.outputs.tag }}-(.*)"   # unabhängig von dbmetrics und infra-tools gives name
          tagRegexGroup: 1

      - name: Checkout Code
        if: github.event.schedule != '0 2 * * *'
        uses: actions/checkout@v2

      - name: Docker meta Service Name for docker hub
        if: github.event.schedule != '0 2 * * *'
        id: docker_meta_img_hub
        uses: docker/metadata-action@v3
        with:
          images: schulcloud/${{ steps.tagName.outputs.tag }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.versionName.outputs.tag }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.versionName.outputs.tag }}

      - name: Log into registry
        if: github.event.schedule != '0 2 * * *'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push ${{ github.repository }}
        if: github.event.schedule != '0 2 * * *'
        uses: docker/build-push-action@v2
        with:
          context: ./${{ steps.tagName.outputs.tag }}/
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta_img_hub.outputs.tags }}
          labels: ${{ steps.docker_meta_img_hub.outputs.labels }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: 'docker.io/schulcloud/${{ steps.tagName.outputs.tag }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: 1
          ignore-unfixed: true

      - name: Upload Trivy scan results to GitHub Security tab
        if: ${{ always() }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

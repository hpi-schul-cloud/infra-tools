global
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    #maxconn     4000
    maxconn 	180000   
    maxsessrate 2048
    maxsslconn 	180000
    tune.ssl.cachesize 1000000
    tune.ssl.default-dh-param 2048

    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats
    stats timeout 30s
    
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
    # New strict-limits
    strict-limits

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  dontlognull
    option                  dontlog-normal
    option                  httplog
    option                  http-server-close
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           5s
    timeout connect         10s
    timeout client          30s
    timeout server          30s
    timeout http-keep-alive 2s
    timeout check           10s
    timeout client-fin      1s
    timeout server-fin      1s

frontend sc-dev-service-1-haproxy
{% for ip in frontend_ips %}
    bind {{ ip }}:80 v4v6 transparent
{% endfor %}
    default_backend sc-dev-service-1-cluster

backend sc-dev-service-1-cluster
    mode http
    balance static-rr
{% for ip in k8s_node_ips %}
    server worker-{{ loop.index }} {{ ip }}:80 check inter 10s fall 2 maxconn 12000
{% endfor %}
